<launch>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find turtle_pi_description)/worlds/turtle_pi.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <!-- Load the URDF into the ROS Parameter Server -->
  <param name="robot_description"
    command="$(find xacro)/xacro --inorder '$(find turtle_pi_description)/urdf/turtle_pi.urdf'" />

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-urdf -model turtle_pi -param robot_description"/>

  <node name="camera_relay" pkg="topic_tools" type="relay" args="/turtle_pi/camera/image_raw/compressed /compressed_image" />

  <!-- ros_control turtle_pi launch file -->
  <!--include file="$(find turtle_pi)/launch/turtle_pi.launch" /-->

  <node pkg="robot_state_publisher" type="robot_state_publisher"  name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="30.0" />
  </node>

  <rosparam command="load"
            file="$(find turtle_pi_description)/config/joints.yaml"/>

  <rosparam command="load"
            file="$(find turtle_pi_description)/config/diffdrive.yaml"
            ns="turtle_pi_diff_drive_controller" />

  <node name="turtle_pi_controller_spawner" pkg="controller_manager" type="spawner"
    args="turtle_pi_joint_state_controller 
          turtle_pi_diff_drive_controller"/>

  <node name="twist_relay" pkg="topic_tools" type="relay" args="/cmd_vel /turtle_pi_diff_drive_controller/cmd_vel" />

  <!--node name="rqt_robot_steering" pkg="rqt_robot_steering" type="rqt_robot_steering">
    <param name="default_topic" value="/turtle_pi_diff_drive_controller/cmd_vel"/>
  </node-->
</launch>
